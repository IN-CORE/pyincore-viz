name: CI

on:
  push:
    branches:
      - master
      - develop

    tags:
      - '*'

  pull_request:

env:
  MAIN_REPO: IN-CORE/pyincore-viz

jobs:
  miniconda:
    name: Miniconda
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: pyincore
          environment-file: environment.yaml
          python-version: 3.8
          auto-activate-base: false
      - shell: bash -l {0}
        run: |
          conda info
          conda list
      - name: Lint
        shell: bash -l {0}
        run: |
          conda install flake8
          python -m flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          python -m flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Run pytest
        shell: bash -l {0}
        run: |
          conda install --file requirements.txt
          conda install pytest
          pytest tests/pyincore_viz/test_pyincore_viz.py

  #-----------------------------------------------------------------------
  # UNIT TEST
  # ----------------------------------------------------------------------
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Python 3
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run tests with pytest
        run: |
          pytest tests/test_pyincore_viz.py --exitfirst --verbose
          --failed-first --cov=. --cov-report html

  # ----------------------------------------------------------------------
  # DOCKER BUILD
  # ----------------------------------------------------------------------
  docker:
    runs-on: ubuntu-latest

    steps:
      # checkout source code
      - uses: actions/checkout@v2

      # calculate some variables that are used later
      - name: version information
        run: |
          if [ "${{ github.event.release.target_commitish }}" != "" ]; then
            BRANCH="${{ github.event.release.target_commitish }}"
          elif [[ $GITHUB_REF =~ pull ]]; then
            BRANCH="$(echo $GITHUB_REF | sed 's#refs/pull/\([0-9]*\)/merge#PR-\1#')"
          else
            BRANCH=${GITHUB_REF##*/}
          fi
          echo "GITHUB_BRANCH=${BRANCH}" >> $GITHUB_ENV
          if [ "$BRANCH" == "master" ]; then
            version=$(cat package.json | grep \"version\" | head -1 | awk -F= "{ print $2 }" | sed 's/[version:,",]//g' | tr -d '[[:space:]]')
            tags="latest"
            oldversion=""
            while [ "${oldversion}" != "${version}" ]; do
              oldversion="${version}"
              tags="${tags},${version}"
              version=${version%.*}
            done
            echo "VERSION=${version}" >> $GITHUB_ENV
            echo "TAGS=${tags}" >> $GITHUB_ENV
          elif [ "$BRANCH" == "develop" ]; then
            echo "VERSION=develop" >> $GITHUB_ENV
            echo "TAGS=develop" >> $GITHUB_ENV
          else
            echo "VERSION=testing" >> $GITHUB_ENV
            echo "TAGS=${BRANCH}" >> $GITHUB_ENV
          fi

      # build image
      - name: Build image
        uses: elgohr/Publish-Docker-Github-Action@3.04
        env:
          BRANCH: ${{ env.GITHUB_BRANCH }}
          VERSION: ${{ env.VERSION }}
          BUILDNUMBER: ${{ github.run_number }}
          GITSHA1: ${{ github.sha }}
        with:
          registry: hub.ncsa.illinois.edu
          name: incore/doc/pyincore-viz
          #username: ${{ secrets.HUB_USERNAME }}
          #password: ${{ secrets.HUB_PASSWORD }}
          tags: "${{ env.TAGS }}"
          buildargs: BRANCH,VERSION,BUILDNUMBER,GITSHA1
          no_push: true

      # this will publish to NCSA
      - name: Publish to NCSA Hub
        #if: github.event_name != 'pull_request' && github.repository == env.MAIN_REPO
        if: github.repository == env.MAIN_REPO
        uses: elgohr/Publish-Docker-Github-Action@3.04
        env:
          BRANCH: ${{ env.GITHUB_BRANCH }}
          VERSION: ${{ env.VERSION }}
          BUILDNUMBER: ${{ github.run_number }}
          GITSHA1: ${{ github.sha  }}
        with:
          registry: hub.ncsa.illinois.edu
          name: incore/doc/pyincore-viz
          username: ${{ secrets.HUB_USERNAME }}
          password: ${{ secrets.HUB_PASSWORD }}
          tags: "${{ env.TAGS }}"
          buildargs: BRANCH,VERSION,BUILDNUMBER,GITSHA1